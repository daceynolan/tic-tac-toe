{"version":3,"sources":["components/Square/Square.js","components/Board/Board.js","components/GithubLink/GithubLink.js","components/RulesModal/RulesModal.js","utils.js","components/Game/Game.js","App.js","index.js"],"names":["Square","onClick","value","isHighlighted","delayMultiplier","className","style","transitionDelay","Number","Board","index","winningIndex","this","props","winningIndexes","indexOf","squares","renderSquare","React","Component","GithubLink","href","aria-label","width","height","viewBox","aria-hidden","d","fill","RulesModal","onClose","calculateWinner","lines","i","length","a","b","c","player","indexes","Game","useState","stepNumber","setStepNumber","playerX","setPlayerX","playerO","setPlayerO","xIsNext","setXIsNext","Array","history","setHistory","statusText","setStatusText","isShowingGameRules","setIsShowingGameRules","setWinningIndexes","current","playerXName","playerOName","useEffect","winner","htmlFor","id","type","onChange","event","target","sliceHistory","slice","concat","handleClick","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3febd56c.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./square.css\";\n\nconst Square = ({ onClick, value, isHighlighted, delayMultiplier }) => {\n  return (\n    <button\n      className={`square ${isHighlighted ? \"square--highlight\" : \"\"}`}\n      onClick={onClick}\n      style={{ transitionDelay: `${Number(delayMultiplier) * 0.3}s` }}\n    >\n      {value}\n    </button>\n  );\n};\n\nexport default Square;\n","import React from \"react\";\n\nimport Square from \"../Square\";\n\nclass Board extends React.Component {\n  renderSquare(index) {\n    const winningIndex = this.props.winningIndexes.indexOf(index);\n    return (\n      <Square\n        delayMultiplier={winningIndex}\n        isHighlighted={winningIndex > -1}\n        onClick={() => this.props.onClick(index)}\n        value={this.props.squares[index]}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"board\">\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Board;\n","import React from \"react\";\n\nimport \"./githubLink.css\";\n\nconst GithubLink = () => (\n  <a\n    className=\"gh-link\"\n    href=\"https://github.com/daceynolan/tic-tac-toe\"\n    aria-label=\"View source on Github\"\n  >\n    <svg\n      className=\"octo-img\"\n      width=\"80\"\n      height=\"80\"\n      viewBox=\"0 0 250 250\"\n      aria-hidden=\"true\"\n    >\n      <path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\" />\n      <path\n        className=\"octo-arm\"\n        fill=\"currentColor\"\n        d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\"\n      />\n      <path\n        className=\"octo-body\"\n        fill=\"currentColor\"\n        d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\"\n      />\n    </svg>\n  </a>\n);\n\nexport default GithubLink;\n","import React from \"react\";\n\nimport \"./rulesmodal.css\";\n\nconst RulesModal = props => {\n  return (\n    <div className=\"game-rules\" onClick={props.onClose}>\n      <div className=\"game-rules__container\">\n        <h2 className=\"game-rules__title\">Game Rules</h2>\n        <div className=\"game-rules__content\">\n          <ol>\n            <li>Pick if you want to be player X or player O.</li>\n            <li>\n              Players take turns putting their marks in empty squares starting\n              with player X.\n            </li>\n            <li>\n              The first player to get 3 of their marks in a row (up, down,\n              across, or diagonally) is the winner.\n            </li>\n            <li>\n              When all 9 squares are full, the game is over. If no player has 3\n              marks in a row, the game ends in a draw.\n            </li>\n          </ol>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RulesModal;\n","export function calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {\n        player: squares[a],\n        indexes: lines[i]\n      };\n    }\n  }\n  return null;\n}\n","import React, { useState, useEffect } from \"react\";\n\nimport Board from \"../Board\";\nimport GithubLink from \"../GithubLink\";\nimport RulesModal from \"../RulesModal\";\nimport { calculateWinner } from \"../../utils\";\n\nconst Game = () => {\n  const [stepNumber, setStepNumber] = useState(0);\n  const [playerX, setPlayerX] = useState(\"\");\n  const [playerO, setPlayerO] = useState(\"\");\n  const [xIsNext, setXIsNext] = useState(true);\n  const [history, setHistory] = useState([{ squares: Array(9).fill(null) }]);\n  const [statusText, setStatusText] = useState(\"\");\n  const [isShowingGameRules, setIsShowingGameRules] = useState(false);\n  const [winningIndexes, setWinningIndexes] = useState([]);\n\n  const current = history[stepNumber];\n  const playerXName = playerX || \"X\";\n  const playerOName = playerO || \"O\";\n\n  useEffect(() => {\n    const winner = calculateWinner(current.squares);\n    // Max at 10 since first move is \"start\" game + 9 real moves\n    const MAX_HISTORY = 10;\n    if (winner) {\n      setWinningIndexes(winner.indexes);\n      return setStatusText(\n        `Winner: ${winner.player === \"X\" ? playerXName : playerOName}`\n      );\n    }\n    if (history.length >= MAX_HISTORY && !winner) {\n      return setStatusText(\"Draw\");\n    }\n    return setStatusText(`Next player: ${xIsNext ? playerXName : playerOName}`);\n  }, [history, playerX, playerO]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const showRules = () => {\n    setIsShowingGameRules(!isShowingGameRules);\n  };\n\n  const hideRules = () => {\n    setIsShowingGameRules(false);\n  };\n\n  const resetGame = () => {\n    setStepNumber(0);\n    setXIsNext(true);\n    setHistory([{ squares: Array(9).fill(null) }]);\n    setWinningIndexes([]);\n  };\n\n  const changePlayerX = (event) => {\n    setPlayerX(event.target.value);\n  };\n\n  const changePlayerO = (event) => {\n    setPlayerO(event.target.value);\n  };\n\n  const handleClick = (index) => {\n    const sliceHistory = history.slice(0, stepNumber + 1);\n    const current = sliceHistory[sliceHistory.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[index]) {\n      return;\n    }\n    squares[index] = xIsNext ? \"X\" : \"O\";\n    setHistory(sliceHistory.concat([{ squares: squares }]));\n    setStepNumber(sliceHistory.length);\n    setXIsNext(!xIsNext);\n  };\n\n  return (\n    <div className=\"game\">\n      <GithubLink />\n      <div className=\"game__info\">\n        <h1 className=\"game__title\">\n          Tic-Tac-Toe\n          <button onClick={showRules} className=\"button\">\n            ?\n          </button>\n        </h1>\n        <div className=\"game__content\">\n          <div className=\"game__player\">\n            <div className=\"game__player-x\">\n              <label htmlFor=\"playerX\">Player X Name</label>\n              <input\n                id=\"playerX\"\n                type=\"text\"\n                onChange={changePlayerX}\n                value={playerX}\n              />\n            </div>\n            <div className=\"game__player-o\">\n              <label htmlFor=\"playerO\">Player O Name</label>\n              <input\n                id=\"playerO\"\n                type=\"text\"\n                onChange={changePlayerO}\n                value={playerO}\n              />\n            </div>\n          </div>\n          <p>{statusText}</p>\n          <Board\n            onClick={(index) => handleClick(index)}\n            squares={current.squares}\n            winningIndexes={winningIndexes}\n          />\n        </div>\n        <button className=\"game__reset\" onClick={resetGame}>\n          Reset\n        </button>\n      </div>\n      {isShowingGameRules && <RulesModal onClose={hideRules} />}\n    </div>\n  );\n};\n\nexport default Game;\n","import React from \"react\";\n\nimport Game from \"./components/Game\";\nimport \"./app.css\";\n\nconst App = () => {\n  return <Game />;\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}