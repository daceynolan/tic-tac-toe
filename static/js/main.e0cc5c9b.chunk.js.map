{"version":3,"sources":["components/Square.js","components/Board.js","components/RulesModal.js","utils.js","components/Game.js","components/App.js","index.js"],"names":["Square","onClick","value","isHighlighted","delayMultiplier","className","style","transitionDelay","Number","Board","index","winningIndex","this","props","winningIndexes","indexOf","squares","renderSquare","React","Component","RulesModal","onClose","calculateWinner","lines","i","length","a","b","c","player","indexes","Game","useState","stepNumber","setStepNumber","playerX","setPlayerX","playerO","setPlayerO","xIsNext","setXIsNext","Array","fill","history","setHistory","statusText","setStatusText","isShowingGameRules","setIsShowingGameRules","setWinningIndexes","current","playerXName","playerOName","useEffect","winner","htmlFor","id","type","onChange","event","target","sliceHistory","slice","concat","handleClick","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e0cc5c9b.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./square.css\";\n\nconst Square = ({ onClick, value, isHighlighted, delayMultiplier }) => {\n  return (\n    <button\n      className={`square ${isHighlighted ? \"square--highlight\" : \"\"}`}\n      onClick={onClick}\n      style={{ transitionDelay: `${Number(delayMultiplier) * 0.3}s` }}\n    >\n      {value}\n    </button>\n  );\n};\n\nexport default Square;\n","import React from \"react\";\n\nimport Square from \"./Square\";\n\nclass Board extends React.Component {\n  renderSquare(index) {\n    const winningIndex = this.props.winningIndexes.indexOf(index);\n    return (\n      <Square\n        delayMultiplier={winningIndex}\n        isHighlighted={winningIndex > -1}\n        onClick={() => this.props.onClick(index)}\n        value={this.props.squares[index]}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"board\">\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Board;\n","import React from \"react\";\n\nimport \"./rulesmodal.css\";\n\nconst RulesModal = props => {\n  return (\n    <div className=\"game-rules\" onClick={props.onClose}>\n      <div className=\"game-rules__container\">\n        <h2 className=\"game-rules__title\">Game Rules</h2>\n        <div className=\"game-rules__content\">\n          <ol>\n            <li>Pick if you want to be player X or player O.</li>\n            <li>\n              Players take turns putting their marks in empty squares starting\n              with player X.\n            </li>\n            <li>\n              The first player to get 3 of their marks in a row (up, down,\n              across, or diagonally) is the winner.\n            </li>\n            <li>\n              When all 9 squares are full, the game is over. If no player has 3\n              marks in a row, the game ends in a draw.\n            </li>\n          </ol>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RulesModal;\n","export function calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return {\n        player: squares[a],\n        indexes: lines[i]\n      };\n    }\n  }\n  return null;\n}\n","import React, { useState, useEffect } from \"react\";\n\nimport Board from \"./Board\";\nimport RulesModal from \"./RulesModal\";\nimport { calculateWinner } from \"../utils\";\n\nconst Game = () => {\n  const [stepNumber, setStepNumber] = useState(0);\n  const [playerX, setPlayerX] = useState(\"\");\n  const [playerO, setPlayerO] = useState(\"\");\n  const [xIsNext, setXIsNext] = useState(true);\n  const [history, setHistory] = useState([{ squares: Array(9).fill(null) }]);\n  const [statusText, setStatusText] = useState(\"\");\n  const [isShowingGameRules, setIsShowingGameRules] = useState(false);\n  const [winningIndexes, setWinningIndexes] = useState([]);\n  const current = history[stepNumber];\n  const playerXName = playerX || \"X\";\n  const playerOName = playerO || \"O\";\n\n  useEffect(() => {\n    const winner = calculateWinner(current.squares);\n    // Max at 10 since first move is \"start\" game + 9 real moves\n    const MAX_HISTORY = 10;\n    if (winner) {\n      setWinningIndexes(winner.indexes);\n      return setStatusText(\n        `Winner: ${winner.player === \"X\" ? playerXName : playerOName}`\n      );\n    }\n    if (history.length >= MAX_HISTORY && !winner) {\n      return setStatusText(\"Draw\");\n    }\n    return setStatusText(`Next player: ${xIsNext ? playerXName : playerOName}`);\n  }, [history, playerX, playerO]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const showRules = () => {\n    setIsShowingGameRules(!isShowingGameRules);\n  };\n\n  const hideRules = () => {\n    setIsShowingGameRules(false);\n  };\n\n  const resetGame = () => {\n    setStepNumber(0);\n    setXIsNext(true);\n    setHistory([{ squares: Array(9).fill(null) }]);\n    setWinningIndexes([]);\n  };\n\n  const changePlayerX = event => {\n    setPlayerX(event.target.value);\n  };\n\n  const changePlayerO = event => {\n    setPlayerO(event.target.value);\n  };\n\n  const handleClick = index => {\n    const sliceHistory = history.slice(0, stepNumber + 1);\n    const current = sliceHistory[sliceHistory.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[index]) {\n      return;\n    }\n    squares[index] = xIsNext ? \"X\" : \"O\";\n    setHistory(sliceHistory.concat([{ squares: squares }]));\n    setStepNumber(sliceHistory.length);\n    setXIsNext(!xIsNext);\n  };\n\n  return (\n    <div className=\"game\">\n      <div className=\"game__info\">\n        <h1 className=\"game__title\">\n          Tic-Tac-Toe\n          <button onClick={showRules} className=\"button\">\n            ?\n          </button>\n        </h1>\n        <div className=\"game__content\">\n          <div className=\"game__player\">\n            <div className=\"game__player-x\">\n              <label htmlFor=\"playerX\">Player X Name</label>\n              <input\n                id=\"playerX\"\n                type=\"text\"\n                onChange={changePlayerX}\n                value={playerX}\n              />\n            </div>\n            <div className=\"game__player-o\">\n              <label htmlFor=\"playerO\">Player O Name</label>\n              <input\n                id=\"playerO\"\n                type=\"text\"\n                onChange={changePlayerO}\n                value={playerO}\n              />\n            </div>\n          </div>\n          <p>{statusText}</p>\n          <Board\n            onClick={index => handleClick(index)}\n            squares={current.squares}\n            winningIndexes={winningIndexes}\n          />\n        </div>\n        <button className=\"game__reset\" onClick={resetGame}>\n          Reset\n        </button>\n      </div>\n      {isShowingGameRules && <RulesModal onClose={hideRules} />}\n    </div>\n  );\n};\n\nexport default Game;\n","import React from \"react\";\n\nimport Game from \"./Game\";\nimport \"../index.css\";\n\nconst App = () => {\n  return <Game />;\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}